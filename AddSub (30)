08-bit instruction arithmetik (30)
+--------------+---------------------------------------+
| carry        | non                                   |
+--------------+---------------------------------------+
| operand      | direction                             |
+--------------+-------------------+-------------------+
| result       | direction         | reversed          |
+--------------+-----+------+------+-----+------+------+
| offset       | non | load | push | non | load | push |
+--------------+-----+------+------+-----+------+------+
| addition     | ADD | ADL  | ...  | ADR | ...  | ADP  |
+--------------+-----+------+------+-----+------+------+

ADD - add R0 and Rx, the result is placed in R0
ADL - add R0 and Rx, all register numbers are incremented, the result is placed in R0

ADR - add R0 and Rx, the result is placed in Rx
ADP - add R0 and Rx, result is placed in Rx, all register numbers are decremented

+--------------+---------------------------------------------------------+
| carry        | yes                                                     |
+--------------+---------------------------------------------------------+
| operand      | direction                                               |
+--------------+----------------------------+----------------------------+
| result       | direction                  | reversed                   |
+--------------+-----+------+--------+------+-----+------+------+--------+
| offset       | non | load | load-2 | push | non | load | push | push-2 |
+--------------+-----+------+--------+------+-----+------+------+--------+
| addition     | ADC | ACL  | AL2    | ACP  | ACR | ARL  | ARP  | AP2    |
+--------------+-----+------+--------+------+-----+------+------+--------+

ADC - add R0, R1 and Rx, the result is placed in R1, the carry bits are placed in R0
ACL - add R0 and Rx, all register numbers are incremented, the result is placed in R1, the carry bits are placed in R0
AL2 - add R0 and Rx, all register numbers are incremented twice, the result is placed in R1, the carry bits are placed in R0
ACP - add R0, R1 and Rx, all register numbers are decremented, the result is placed in R0

ACR - add R0, R1 and Rx, the result is placed in Rx, the carry bits are placed in R0
ARL - add R0 and Rx, the result is placed in Rx, all register numbers are incremented, the carry bits are placed in R0
ARP - add R0, R1 and Rx, the result is placed in Rx, all register numbers are decremented
AP2 - add R0, R1 and Rx, the result is placed in Rx, all register numbers are decremented twice

+--------------+-------------------------------------------------------------------------------+
| carry        | non                                                                           |
+--------------+---------------------------------------+---------------------------------------+
| operand      | direction                             | reversed                              |
+--------------+-------------------+-------------------+-------------------+-------------------+
| result       | direction         | reversed          | direction         | reversed          |
+--------------+-----+------+------+-----+------+------+-----+------+------+-----+------+------+
| offset       | non | load | push | non | load | push | non | load | push | non | load | push |
+--------------+-----+------+------+-----+------+------+-----+------+------+-----+------+------+
| substraction | SUB | SBL  | ...  | SBR | ...  | SBP  | SRD | SRL  | ...  | SRR | ...  | SRP  |
+--------------+-----+------+------+-----+------+------+-----+------+------+-----+------+------+

SUB - subtract from R0 of Rx, the result is placed in R0
SBL - subtract from R0 of Rx, all register numbers are incremented, the result is placed in R0

SBR - subtract from R0 of Rx, the result is placed in Rx
SBP - subtract from R0 of Rx, result is placed in Rx, all register numbers are decremented

SRD - subtract from Rx of R0, the result is placed in R0
SRL - subtract from Rx of R0, all register numbers are incremented, the result is placed in R0

SRR - subtract from Rx of R0, the result is placed in Rx
SRP - subtract from Rx of R0, the result is placed in Rx, all register numbers are decremented

+--------------+-------------------------------------------------------------------------------------------------+
| carry        | yes                                                                                             |
+--------------+---------------------------------------------------------+---------------------------------------+
| operand      | direction                                               | reversed                              |
+--------------+----------------------------+----------------------------+-------------------+-------------------+
| result       | direction                  | reversed                   | direction         | reversed          |
+--------------+-----+------+--------+------+-----+------+------+--------+-----+------+------+-----+------+------+
| offset       | non | load | load-2 | push | non | load | push | push-2 | non | load | push | non | load | push |
+--------------+-----+------+--------+------+-----+------+------+--------+-----+------+------+-----+------+------+
| substraction | SBC | SCL  | SL2    | SCP  | SR2 | SL2  | SP2  |        | SCR | SRL  | SRP  | xxx | xxx  | xxx  |
+--------------+-----+------+--------+------+-----+------+------+--------+-----+------+------+-----+------+------+

SBC - subtract from R1 of R0 and Rx, result is placed in R1, carry bits are placed in R0
SCL - subtract from R0 of Rx, all register numbers are incremented, the result is placed in R1, carry bits are placed in R0
SL2 - subtract from R0 of Rx, all register numbers are incremented twice, the result is placed in R1, carry bits are placed in R0
SCP - subtract from R1 registers R0 and Rx, all register numbers are decremented, result is placed in R0

SR2 - subtract from R1 of R0 and Rx, result is placed in Rx, carry bits are placed in R0
SL2 - subtract from R0 of Rx, the result is placed in Rx, all register numbers are incremented, carry bits are placed in R0
SP2 - subtract from R1 registers R0 and Rx, result is placed in Rx, all register numbers are decremented

SCR - subtract from Rx of R0 and R1, result is placed in R1, carry bits are placed in R0
SCL - subtract from Rx of R0, the result is placed in R1, all register numbers are incremented, carry bits are placed in R0
SCP - subtract from Rx R0 and Rx, result is placed in R1, all register numbers are decremented

xxx - 
xxx - 
xxx -
